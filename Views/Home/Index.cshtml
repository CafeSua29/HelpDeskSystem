@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@model HelpDeskSystem.ViewModels.TicketDashboardVM

@{
    ViewData["Title"] = "Home Page";

    var userName = User.FindFirst("UserName")?.Value ?? "";
}

@if (SignInManager.IsSignedIn(User))
{
    <div class="content container-fluid">
        <div class="page-header">
            <div class="row">
                <div class="col-sm-12">
                    <h3 class="page-title">Welcome @userName!</h3>
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item active">Dashboard</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-one w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-icon">
                                <i class="fas fa-ticket"></i>
                            </div>
                            <div class="db-info">
                                <h3>@Model.TicketsSummary.TotalTickets</h3>
                                <h6>Total Tickets</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-two w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-icon">
                                <i class="fas fa-ticket"></i>
                            </div>
                            <div class="db-info">
                                <h3>@Model.TicketsSummary.PendingTickets</h3>
                                <h6>Pending Tickets</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-three w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-icon">
                                <i class="fas fa-ticket"></i>
                            </div>
                            <div class="db-info">
                                <h3>@Model.TicketsSummary.ResolvedTickets</h3>
                                <h6>Resolved Tickets</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12 d-flex">
                <div class="card bg-four w-100">
                    <div class="card-body">
                        <div class="db-widgets d-flex justify-content-between align-items-center">
                            <div class="db-icon">
                                <i class="fas fa-ticket"></i>
                            </div>
                            <div class="db-info">
                                <h3>@Model.TicketsSummary.ClosedTickets</h3>
                                <h6>Closed Tickets</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-3 col-sm-6 col-12">
                <div class="card flex-fill fb sm-box">
                    <i class="fab fa-facebook"></i>
                    <h6>50,095</h6>
                    <p>Likes</p>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12">
                <div class="card flex-fill twitter sm-box">
                    <i class="fab fa-twitter"></i>
                    <h6>48,596</h6>
                    <p>Follows</p>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12">
                <div class="card flex-fill insta sm-box">
                    <i class="fab fa-instagram"></i>
                    <h6>52,085</h6>
                    <p>Follows</p>
                </div>
            </div>
            <div class="col-xl-3 col-sm-6 col-12">
                <div class="card flex-fill linkedin sm-box">
                    <i class="fab fa-linkedin-in"></i>
                    <h6>69,050</h6>
                    <p>Follows</p>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-6 col-sm-6 col-12">
                <div class="card flex-fill sm-box">
                    <div id="piechart3d"></div>
                </div>
            </div>
            <div class="col-xl-6 col-sm-6 col-12">
                <div class="card flex-fill sm-box">
                    <div id="piechart"></div>
                </div>
            </div>
            <div class="col-xl-6 col-sm-6 col-12">
                <div class="card flex-fill sm-box">
                    <div id="barchart"></div>
                </div>
            </div>
            <div class="col-xl-6 col-sm-6 col-12">
                <div class="card flex-fill sm-box">
                    <div id="barchart2"></div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    </div>
}

@section Scripts
{
    <script>
        // Data retrieved from https://netmarketshare.com/
        // Build the chart
        Highcharts.chart('piechart3d', {
            chart: {
                type: 'pie',
                options3d: {
                    enabled: true,
                    alpha: 45,
                    beta: 0
                }
            },
            title: {
                text: 'Ticket per Status',
                align: 'left'
            },
            subtitle: {
                text: '',
                align: 'left'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    depth: 35,
                    dataLabels: {
                        enabled: true,
                        format: '{point.name}'
                    }
                }
            },
            series: [{
                type: 'pie',
                name: 'Share',
                data: [
                    ['Pending', @Model.TicketsSummary.PendingTickets],
                    ['Assigned', @Model.TicketsSummary.AssignedTickets],
                    ['Resolved', @Model.TicketsSummary.ResolvedTickets],
                    ['Closed', @Model.TicketsSummary.ClosedTickets]
                ]
            }]
        });

        Highcharts.chart('piechart', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie'
            },
            title: {
                text: 'Ticket per Priority',
                align: 'left'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                point: {
                    valueSuffix: '%'
                }
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: false
                    },
                    showInLegend: true
                }
            },
            series: [{
                name: 'Priority',
                colorByPoint: true,
                data: [{
                    name: 'Low',
                    y: @Model.TicketsPriority.LowTickets,
                    sliced: true,
                    selected: true
                }, {
                    name: 'Medium',
                    y: @Model.TicketsPriority.MediumTickets
                }, {
                    name: 'High',
                    y: @Model.TicketsPriority.HighTickets
                }]
            }]
        });

        //Data retrieved from https://gs.statcounter.com/browser-market-share#monthly-202201-202201-bar

        //Create the chart
        Highcharts.chart('barchart', {
            chart: {
                type: 'column'
            },
            title: {
                align: 'left',
                text: 'Ticket per Status'
            },
            subtitle: {
                align: 'left',
                text: ''
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total percent Ticket Status'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}</b> of total<br/>'
            },

            series: [
                {
                    name: 'Tickets',
                    colorByPoint: true,
                    data: [
                        {
                            name: 'Pending',
                            y: @Model.TicketsSummary.PendingTickets
                        },
                        {
                            name: 'Assigned',
                            y: @Model.TicketsSummary.AssignedTickets
                        },
                        {
                            name: 'Resolved',
                            y: @Model.TicketsSummary.ResolvedTickets
                        },
                        {
                            name: 'Closed',
                            y: @Model.TicketsSummary.ClosedTickets
                        }
                    ]
                }
            ]
        });

        Highcharts.chart('barchart2', {
            chart: {
                type: 'column'
            },
            title: {
                align: 'left',
                text: 'Ticket per Priority'
            },
            subtitle: {
                align: 'left',
                text: ''
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total percent Ticket Priority'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}</b> of total<br/>'
            },

            series: [
                {
                    name: 'Tickets',
                    colorByPoint: true,
                    data: [
                        {
                            name: 'Low',
                            y: @Model.TicketsPriority.LowTickets
                        },
                        {
                            name: 'Medium',
                            y: @Model.TicketsPriority.MediumTickets
                        },
                        {
                            name: 'High',
                            y: @Model.TicketsPriority.HighTickets
                        }
                    ]
                }
            ]
        });
    </script>
}
