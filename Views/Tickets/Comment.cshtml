@using HelpDeskSystem.ViewModels
@model HelpDeskSystem.Models.Ticket

@{
    ViewData["Title"] = "Comment";

    List<Comment> comments = ViewBag.Comments;

    List<Comment> replies = ViewBag.Replies;

    var user = User.FindFirst("UserId")?.Value ?? "";

    var allUserPermissions = User.FindFirst("UserPermission")?.Value ?? "";

    var admin = allUserPermissions.Contains(":SYSTEM");
}

<div class="content container-fluid">
    <div class="page-header">
        <div class="row">
            <div class="col-sm-12">
                <h3 class="page-title">Comment</h3>
            </div>

            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check"></i>
                    @TempData["Message"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-close"></i>
                    @TempData["Error"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="about-info">
                        <h4>Ticket information</h4>
                        <div class="media mt-3">

                            <div class="media-body">
                                <ul>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.Title):</span>
                                        <span class="info-span">@Html.DisplayFor(model => model.Title)</span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.Description):</span>
                                        <span class="info-span">@Html.DisplayFor(model => model.Description)</span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.Priority):</span>
                                        <span class="info-span">@Html.DisplayFor(model => model.Priority.Description)</span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.SubCategory):</span>
                                        <span class="info-span">@Html.DisplayFor(model => model.SubCategory.Name)</span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.Attachment):</span>
                                        <span class="info-span">
                                            <a asp-action="DownloadAttachment" asp-route-fileName="@Model.Attachment">
                                                @Html.DisplayFor(model => model.Attachment)
                                            </a>
                                        </span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.CreatedBy):</span>
                                        <span class="info-span">
                                            <a asp-controller="Users" asp-action="Details" asp-route-id="@Model.CreatedById">
                                                @Html.DisplayFor(model => model.CreatedBy.Name)
                                            </a>
                                        </span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.CreatedOn):</span>
                                        <span class="info-span">@Html.DisplayFor(model => model.CreatedOn)</span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.AssignedTo):</span>
                                        <span class="info-span">
                                            <a asp-controller="Users" asp-action="Details" asp-route-id="@Model.AssignedToId">
                                                @Html.DisplayFor(model => model.AssignedTo.Name)
                                            </a>
                                        </span>
                                    </li>
                                    <li>
                                        <span class="title-span">@Html.DisplayNameFor(model => model.Status):</span>
                                        <span class="info-span">@Html.DisplayFor(model => model.Status.Description)</span>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        @if (Model.CreatedById.Equals(user) || user.Equals(Model.AssignedToId) || admin)
                        {
                            <div>
                                <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Edit</a>
                            </div>
                        }

                        <div class="row mt-3">
                            <div class="col-md-12">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-12">
                    <div class="skill-info">
                        <h4>Comment</h4>
                        @foreach (var comment in comments)
                        {
                            <partial name="_CommentPartial" model="new CommentVM
                                        {
                                            Comment = comment,
                                            Replies = replies,
                                            Depth = 0,
                                            UserId = user,
                                            isAdmin = admin
                                        }" />
                        }

                        <div class="row">
                            <form asp-action="Comment" asp-route-id="@Model?.Id">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="form-group">
                                    <textarea name="Desc" class="form-control" placeholder="Description" id="commentInput" required></textarea>
                                    <input type="hidden" name="parentId" value="" id="parentIdInput" />
                                    <input type="hidden" name="ownerId" value="" id="ownerIdInput" />
                                </div>
                                <div class="form-group">
                                    <a asp-action="Index" class="btn btn-primary float-start"><i class="fas fa-arrow-left"></i> Back to List</a>
                                    <input type="submit" value="Comment" class="btn btn-primary float-end" id="test" />
                                </div>
                            </form>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<hr />

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-sm-12">
                        <h3 class="modal-title" id="deleteModalLabel">Are you sure you want to delete this comment ?</h3>
                    </div>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="about-info">
                            <h4>Comment information</h4>
                            <div class="media mt-3">
                                <div class="media-body">
                                    <ul>
                                        <li>
                                            <span class="title-span">Description:</span>
                                            <span class="info-span" id="itemDesc"></span>
                                        </li>
                                        <li>
                                            <span class="title-span">Created By:</span>
                                            <span class="info-span" id="itemBy"></span>
                                        </li>
                                        <li>
                                            <span class="title-span">Created On:</span>
                                            <span class="info-span" id="itemOn"></span>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" action="">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 2000);
        });

        $('#deleteConfirmationModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var id = button.data('id');
            var desc = button.data('desc');
            var by = button.data('by');
            var on = button.data('on');
            var action = '/Comments/Delete/' + id;

            var modal = $(this);
            modal.find('#deleteForm').attr('action', action);
            modal.find('#itemDesc').text(desc);
            modal.find('#itemBy').text(by);
            modal.find('#itemOn').text(on);
        });

        function setReplyTarget(commentId, ownerId) {
            const parentIdInput = document.getElementById("parentIdInput");
            const ownerIdInput = document.getElementById("ownerIdInput");
            const commentInput = document.getElementById("commentInput");

            parentIdInput.value = commentId;
            ownerIdInput.value = ownerId;
            commentInput.focus();
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".comment").forEach(function (commentElement) {
                const userId = commentElement.getAttribute("data-user-id");

                fetch(`/Users/GetUserAvatar?userId=${userId}`)
                    .then(response => {
                        console.log("Raw Response:", response); // Logs the raw response object
                        return response.json();
                    })
                    .then(data => {
                        console.log("Response Data:", data); // Debug the API response

                        if (data && data.avatarUrl) {
                            const avatarImg = commentElement.querySelector(".ava");
                            console.log("Found img element:", avatarImg); // Debug DOM selection

                            if (avatarImg) {
                                avatarImg.src = "/assets/img/profiles/" + data.avatarUrl; // Update the src attribute
                            } else {
                                console.error("img tag not found inside comment element.");
                            }
                        } else {
                            console.warn(`No avatarUrl found for userId: ${userId}`);
                        }
                    })
                    .catch(error => console.error("Error fetching avatar:", error));
            });
        });

        function toggleReplies(commentId) {
            const replies = document.getElementById(`replies-${commentId}`);
            const toggleText = document.getElementById(`toggle-text-${commentId}`);
            if (replies.style.display === "none") {
                replies.style.display = "block";
                toggleText.innerText = "Hide Replies";
            } else {
                replies.style.display = "none";
                toggleText.innerText = "Show Replies";
            }
        }

    </script>
}
